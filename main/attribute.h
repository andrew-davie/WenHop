#ifndef __ATTRIBUTE_H
#define __ATTRIBUTE_H

#include "main.h"

extern const unsigned int Attribute[];
extern const unsigned char CharToType[];

enum ObjectType {

    // update Attribute[] in attribute.c
    // update AnimateBase[] in animations.c

    TYPE_SPACE,                 // 00      ASSUMED == 0 in code
    TYPE_DIRT,                  // 01
    TYPE_BRICKWALL,             // 02
    TYPE_OUTBOX_PRE,            // 03
    TYPE_OUTBOX,                // 04
    TYPE_STEELWALL,             // 05
    TYPE_ROCK,                  // 06
    TYPE_DOGE,                  // 07
    TYPE_MELLON_HUSK_PRE,       // 08
    TYPE_MELLON_HUSK,           // 09
    TYPE_PEBBLE1,               // 10
    TYPE_DUST_0,                // 11
    TYPE_DOGE_FALLING,          // 12
    TYPE_ROCK_FALLING,          // 13
    TYPE_DUST_ROCK,             // 14
    TYPE_CONVERT_GEODE_TO_DOGE, // 15
    TYPE_SWITCH,                // 16
    TYPE_PUSHER,                // 17
    TYPE_PUSHER_VERT,           // 18
    TYPE_WYRM,                  // 19
    TYPE_GEODOGE,               // 20
    TYPE_GEODOGE_FALLING,       // 21
    TYPE_LAVA,                  // 22
    TYPE_PEBBLE_ROCK,           // 23
    TYPE_FLIP_GRAVITY,          // 24
    TYPE_BLOCK,                 // 25
    TYPE_GRINDER,               // 26
    TYPE_HUB,                   // 27
    TYPE_WATER,                 // 28
    TYPE_WATERFLOW_0,           // 29
    TYPE_WATERFLOW_1,           // 30
    TYPE_WATERFLOW_2,           // 31
    TYPE_WATERFLOW_3,           // 32
    TYPE_WATERFLOW_4,           // 33
    TYPE_TAP,                   // 34
    TYPE_OUTLET,                // 35
    TYPE_GRINDER_1,             // 36
    TYPE_BELT,                  // 37
    TYPE_BELT_1,                // 38
    TYPE_CONVERT_PIPE,          // 39
    TYPE_DOGE_FALLING2,         // 40

    TYPE_MAX
};

enum ChName {

    // see charSet[] @ characterset.c
    // Objects numbered > 63 cannot be generated by cave data (6 bits)
    // see CharToType[] in attribute.c

    CH_BLANK,                  // 000
    CH_DIRT,                   // 001
    CH_BRICKWALL,              // 002
    CH_DOORCLOSED,             // 003
    CH_DOOROPEN_0,             // 004
    CH_EXITBLANK,              // 005
    CH_STEELWALL,              // 006
    CH_PEBBLE1,                // 007
    CH_PEBBLE2,                // 008
    CH_ROCK,                   // 009
    CH_ROCK_FALLING,           // 010          +2 offset assumed by code
    CH_DOGE_00,                // 011
    CH_DOGE_FALLING,           // 012          +2 offset assumed by code
    CH_MELLON_HUSK_BIRTH,      // 013
    CH_LAVA_BLANK,             // 014
    CH_LAVA_SMALL,             // 015
    CH_LAVA_MEDIUM,            // 016
    CH_LAVA_LARGE,             // 017
    CH_MELLON_HUSK,            // 018
    CH_DOGE_01,                // 019
    CH_DOGE_02,                // 020
    CH_DOGE_03,                // 021
    CH_DOGE_04,                // 022
    CH_DOGE_05,                // 023
    CH_DOGE_STATIC,            // 024 (CAN SWITCH ANIMATIONS ON THIS!)
    CH_PEBBLE_ROCK,            // 025
    CH_DUST_0,                 // 026
    CH_DUST_1,                 // 027
    CH_DUST_2,                 // 028
    CH_GEODOGE,                // 029
    CH_CONGLOMERATE_1,         // 030
    CH_CONGLOMERATE_2,         // 031
    CH_CONGLOMERATE_3,         // 032
    CH_CONGLOMERATE_4,         // 033
    CH_CONGLOMERATE_5,         // 034
    CH_CONGLOMERATE_6,         // 035
    CH_CONGLOMERATE_7,         // 036
    CH_CONGLOMERATE_8,         // 037
    CH_CONGLOMERATE_9,         // 038
    CH_CONGLOMERATE_10,        // 039
    CH_CONGLOMERATE_11,        // 040
    CH_CONGLOMERATE_12,        // 041
    CH_CONGLOMERATE_13,        // 042
    CH_CONGLOMERATE_14,        // 043
    CH_CONGLOMERATE_15,        // 044
    CH_DUST_ROCK_0,            // 045
    CH_DUST_ROCK_1,            // 046
    CH_DUST_ROCK_2,            // 047
    CH_CONVERT_GEODE_TO_DOGE,  // 048
    CH_SWITCH_LEFT_OFF,        // 049
    CH_SWITCH_LEFT_ON,         // 050
    CH_HORIZONTAL_BAR,         // 051
    CH_PUSH_LEFT,              // 052       reverse must be +1
    CH_PUSH_LEFT_REVERSE,      // 053
    CH_PUSH_RIGHT,             // 054
    CH_PUSH_RIGHT_REVERSE,     // 055
    CH_VERTICAL_BAR,           // 056
    CH_PUSH_UP,                // 057
    CH_PUSH_UP_REVERSE,        // 058
    CH_PUSH_DOWN,              // 059
    CH_PUSH_DOWN_REVERSE,      // 060
    CH_WYRM_BODY,              // 061
    CH_WYRM_VERT_BODY,         // 062
    CH_WYRM_CORNER_LD,         // 063
    CH_WYRM_CORNER_RD,         // 064
    CH_WYRM_CORNER_LU,         // 065
    CH_WYRM_CORNER_RU,         // 066
    CH_WYRM_HEAD_U,            // 067
    CH_WYRM_HEAD_R,            // 068
    CH_WYRM_HEAD_D,            // 069
    CH_WYRM_HEAD_L,            // 070
    CH_GEODOGE_FALLING,        // 071
    CH_FLIP_GRAVITY_0,         // 072
    CH_FLIP_GRAVITY_1,         // 073
    CH_FLIP_GRAVITY_2,         // 074
    CH_BLOCK,                  // 075
    CH_GRINDER_0,              // 076
    CH_GRINDER_1,              // 077
    CH_HUB,                    // 078
    CH_WATER,                  // 079
    CH_WATERFLOW_0,            // 080 must be grouped
    CH_WATERFLOW_1,            // 081 .
    CH_WATERFLOW_2,            // 082 .
    CH_WATERFLOW_3,            // 083 .
    CH_WATERFLOW_4,            // 084 /
    CH_TAP_0,                  // 085
    CH_HUB_1,                  // 086
    CH_OUTLET,                 // 087
    CH_TAP_1,                  // 088
    CH_BELT_0,                 // 089
    CH_BELT_1,                 // 090
    CH_PUSH_DOWN2,             // 091
    CH_GEODOGE_CONVERT,        // 092
    CH_CONVERT_PIPE,           // 093
    CH_WYRM_TAIL_U,            // 094
    CH_WYRM_TAIL_R,            // 095
    CH_WYRM_TAIL_D,            // 096
    CH_WYRM_TAIL_L,            // 097
    CH_DOGE_FALLING_TOP,       // 098
    CH_DOGE_FALLING_BOTTOM,    // 099
    CH_ROCK_FALLING_TOP,       // 100
    CH_ROCK_FALLING_BOTTOM,    // 101
    CH_GEODOGE_FALLING_TOP,    // 102
    CH_GEODOGE_FALLING_BOTTOM, // 103
    CH_DOGE_FALLING_TOP2,      // 104
    CH_DOGE_FALLING_BOTTOM2,   // 105
    CH_DOGE_SIDE_1,            // 106
    CH_DOGE_SIDE_3,            // 107
    CH_DOGE_SIDE_2,            // 108
    CH_DOGE_SIDE_4,            // 109

    // 127 is limit

    CH_MAX
};

// clang-format off

#define ENUM_BIT_VALUE(counter) (1 << counter)

#define DEFINE_ENUM_WITH_BIT_VALUES(enumType, ...) \
    typedef enum { \
        __VA_ARGS__ \
    } enumType

#define ATT(enumConstant) ATT_##enumConstant = ENUM_BIT_VALUE(__COUNTER__)

DEFINE_ENUM_WITH_BIT_VALUES(TypeAttributes,

    ATT(ROLL),                  // 00
    ATT(CONVERT),               // 01
    ATT(EXPLODABLE),            // 02
    ATT(PERMEABLE),             // 03
    ATT(BLANK),                 // 04
    ATT(DIRT),                  // 05
    ATT(GRAB),                  // 06
    ATT(PUSH),                  // 07
    ATT(SQUASHABLE_TO_BLANKS),  // 08
    ATT(HARD),                  // 09
    ATT(EXIT),                  // 10
    ATT(NOROCKNOISE),           // 11
    ATT(BLANKISH),              // 12
    ATT(MINE),                  // 13
    ATT(WATERFLOW),             // 14
    ATT(CONVEYOR),              // 15
    ATT(GRIND),                 // 16
    ATT(PIPE),                  // 17
    ATT(PHASE4),                // 18
    ATT(PHASE2),                // 19
    ATT(PHASE1),                // 20
    ATT(DISSOLVES),             // 21
    ATT(MELTS),                 // 22
    ATT(GEODOGE),               // 23
    ATT(PAD),                   // 24
    ATT(CORNER),                // 25
);

#define POS_CORNER 25
#define VALUE_BREAK_GEODE 25

#endif
